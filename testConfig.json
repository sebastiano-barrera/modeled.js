{"testCases":["test/language/block-scope/leave/finally-block-let-declaration-only-shadows-outer-parameter-value-1.js","test/language/block-scope/leave/finally-block-let-declaration-only-shadows-outer-parameter-value-2.js","test/language/block-scope/leave/for-loop-block-let-declaration-only-shadows-outer-parameter-value-1.js","test/language/block-scope/leave/for-loop-block-let-declaration-only-shadows-outer-parameter-value-2.js","test/language/block-scope/leave/nested-block-let-declaration-only-shadows-outer-parameter-value-1.js","test/language/block-scope/leave/nested-block-let-declaration-only-shadows-outer-parameter-value-2.js","test/language/block-scope/leave/outermost-binding-updated-in-catch-block-nested-block-let-declaration-unseen-outside-of-block.js","test/language/block-scope/leave/try-block-let-declaration-only-shadows-outer-parameter-value-1.js","test/language/block-scope/leave/try-block-let-declaration-only-shadows-outer-parameter-value-2.js","test/language/block-scope/leave/verify-context-in-finally-block.js","test/language/block-scope/leave/verify-context-in-for-loop-block.js","test/language/block-scope/leave/verify-context-in-labelled-block.js","test/language/block-scope/leave/verify-context-in-try-block.js","test/language/block-scope/leave/x-after-break-to-label.js","test/language/block-scope/leave/x-before-continue.js","test/language/block-scope/return-from/block-const.js","test/language/block-scope/return-from/block-let.js","test/language/block-scope/shadowing/catch-parameter-shadowing-catch-parameter.js","test/language/block-scope/shadowing/catch-parameter-shadowing-function-parameter-name.js","test/language/block-scope/shadowing/catch-parameter-shadowing-let-declaration.js","test/language/block-scope/shadowing/catch-parameter-shadowing-var-variable.js","test/language/block-scope/shadowing/const-declaration-shadowing-catch-parameter.js","test/language/block-scope/shadowing/const-declarations-shadowing-parameter-name-let-const-and-var-variables.js","test/language/block-scope/shadowing/dynamic-lookup-in-and-through-block-contexts.js","test/language/block-scope/shadowing/hoisting-var-declarations-out-of-blocks.js","test/language/block-scope/shadowing/let-declaration-shadowing-catch-parameter.js","test/language/block-scope/shadowing/let-declarations-shadowing-parameter-name-let-const-and-var.js","test/language/block-scope/shadowing/lookup-from-closure.js","test/language/block-scope/shadowing/lookup-in-and-through-block-contexts.js","test/language/block-scope/shadowing/parameter-name-shadowing-catch-parameter.js","test/language/block-scope/shadowing/parameter-name-shadowing-parameter-name-let-const-and-var.js","test/language/block-scope/shadowing/dynamic-lookup-from-closure.js","test/language/block-scope/syntax/for-in/acquire-properties-from-array.js","test/language/block-scope/syntax/for-in/acquire-properties-from-object.js","test/language/block-scope/syntax/for-in/disallow-initialization-assignment.js","test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-with-and-without-initializer.js","test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-with-initializer.js","test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-without-and-with-initializer.js","test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings.js","test/language/block-scope/syntax/for-in/mixed-values-in-iteration.js","test/language/block-scope/syntax/function-declarations/in-statement-position-case-expression-statement-list.js","test/language/block-scope/syntax/function-declarations/in-statement-position-default-statement-list.js","test/language/block-scope/syntax/function-declarations/in-statement-position-do-statement-while-expression.js","test/language/block-scope/syntax/function-declarations/in-statement-position-for-statement.js","test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement-else-statement.js","test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement.js","test/language/block-scope/syntax/function-declarations/in-statement-position-while-expression-statement.js","test/language/block-scope/syntax/redeclaration-global/allowed-to-declare-function-with-function-declaration.js","test/language/block-scope/syntax/redeclaration-global/allowed-to-redeclare-function-declaration-with-var.js","test/language/block-scope/syntax/redeclaration-global/allowed-to-redeclare-var-with-function-declaration.js","test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration-nested-in-function.js","test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-class.js","test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-const.js","test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-function.js","test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-let.js","test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js","test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js","test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js","test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js","test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-var.js","test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-class.js","test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-const.js","test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-function.js","test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-let.js"]}